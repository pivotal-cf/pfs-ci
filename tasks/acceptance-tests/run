#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

echo
echo "System Tests for riff"
echo

source git-pfs-ci/tasks/scripts/common.sh

echo "Configuring kubectl"
init_kubeconfig

RIFF_NAME=$(cat gcs-riff-chart-latest-name/latest_name)
RIFF_VERSION=$(cat gcs-riff-chart-latest-version/latest_version)

JAVA_INVOKER_VERSION=$(cat java-function-invoker-version/version)
NODE_INVOKER_VERSION=$(cat node-function-invoker-version/version)
PYTHON2_INVOKER_VERSION=$(cat python2-function-invoker-version/version)
SHELL_INVOKER_VERSION=$(cat shell-function-invoker-version/version)

existing_riff_ns=$(find_existing_riff_ns "$RIFF_NAME" "$RIFF_VERSION")
echo "Using namespace ${existing_riff_ns}"

current_kubeconfig_context="$(kubectl config current-context)"
echo "Using kubectl context ${current_kubeconfig_context}"

http_gw_host=$(kubectl -n "$existing_riff_ns" get svc -l component=http-gateway -o jsonpath='{.items[0].status.loadBalancer.ingress[].ip}')
http_gw_port=$(kubectl -n "$existing_riff_ns" get svc -l component=http-gateway -o jsonpath='{.items[0].spec.ports[?(@.name == "http")].port}')

kafka_pod=$(kubectl -n 'riff-system'  get pod -l component=kafka-broker -o jsonpath='{.items[0].metadata.name}')
echo "Using kafka: $kafka_pod"

# init test env vars

export SYS_TEST_JAVA_INVOKER_VERSION="$JAVA_INVOKER_VERSION"
export SYS_TEST_NODE_INVOKER_VERSION="$NODE_INVOKER_VERSION"
export SYS_TEST_PYTHON2_INVOKER_VERSION="$PYTHON2_INVOKER_VERSION"
export SYS_TEST_SHELL_INVOKER_VERSION="$SHELL_INVOKER_VERSION"
export SYS_TEST_NS="$existing_riff_ns"
export SYS_TEST_HTTP_GW_URL="http://${http_gw_host}:${http_gw_port}"
export SYS_TEST_KAFKA_POD_NAME="$kafka_pod"
export SYS_TEST_DOCKER_ORG="$DOCKER_TEST_ORG"
export SYS_TEST_DOCKER_USERNAME="$DOCKER_USERNAME"
export SYS_TEST_DOCKER_PASSWORD="$DOCKER_PASSWORD"
export SYS_TEST_BASE_DIR="$PWD/git-riff" # need full path so FATS can find samples when run in its own directory
export SYS_TEST_MSG_RT_TIMEOUT_SEC=120
export SYS_RIFF_NS="riff-system"

GOPATH=$(go env GOPATH)
export GOPATH
workdir=$GOPATH/src/github.com/projectriff
mkdir -p "$workdir"
cp -rf git-faas-acceptance-test-suite "$workdir/fats"
cd "$workdir/fats"

echo "Setting up dependencies"
dep ensure
go install ./vendor/github.com/onsi/ginkgo/ginkgo # why dep can't do this for me is left as an exercise to the hater

echo "Run tests"
$GOPATH/bin/ginkgo -v --focus=node ./...

echo
echo Done.
echo
